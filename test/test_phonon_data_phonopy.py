import unittest
import numpy.testing as npt
import numpy as np
from euphonic.data.phonon import PhononData
from euphonic import ureg


class TestReadInputFileNaHPhonon(unittest.TestCase):

    def setUp(self):
        # Create trivial function object so attributes can be assigned to it
        expctd_data = type('', (), {})()

        expctd_data.cell_vec = np.array(
            [[5.690301476175671, 0.000000000000000, 0.000000000000000],
             [0.000000000000000, 5.690301476175671, 0.000000000000000],
             [0.000000000000000, 0.000000000000000, 5.690301476175671]])*ureg('angstrom')

        expctd_data.ion_r = np.array(
            [[0.000000000000000, 0.000000000000000, 0.000000000000000],
             [0.000000000000000, 0.500000000000000, 0.500000000000000],
             [0.500000000000000, 0.000000000000000, 0.500000000000000],
             [0.500000000000000, 0.500000000000000, 0.000000000000000],
             [0.500000000000000, 0.500000000000000, 0.500000000000000],
             [0.500000000000000, 0.000000000000000, 0.000000000000000],
             [0.000000000000000, 0.500000000000000, 0.000000000000000],
             [0.000000000000000, 0.000000000000000, 0.500000000000000]])

        expctd_data.ion_type = np.array(['Na', 'Na', 'Na', 'Na', 'Cl', 'Cl', 'Cl', 'Cl'])

        expctd_data.ion_mass = np.array(
                [22.989769, 22.989769, 22.989769, 22.989769,
                    35.453000, 35.453000, 35.453000, 35.453000])*ureg('amu')

        expctd_data.qpts = np.array(
            [[0.0625000, 0.0625000, 0.0625000 ],
             [0.1875000, 0.0625000, 0.0625000 ],
             [0.3125000, 0.0625000, 0.0625000 ],
             [0.4375000, 0.0625000, 0.0625000 ],
             [0.1875000, 0.1875000, 0.0625000 ],
             [0.3125000, 0.1875000, 0.0625000 ],
             [0.4375000, 0.1875000, 0.0625000 ],
             [0.3125000, 0.3125000, 0.0625000 ],
             [0.4375000, 0.3125000, 0.0625000 ],
             [0.4375000, 0.4375000, 0.0625000 ],
             [0.1875000, 0.1875000, 0.1875000 ],
             [0.3125000, 0.1875000, 0.1875000 ],
             [0.4375000, 0.1875000, 0.1875000 ],
             [0.3125000, 0.3125000, 0.1875000 ],
             [0.4375000, 0.3125000, 0.1875000 ],
             [0.4375000, 0.4375000, 0.1875000 ],
             [0.3125000, 0.3125000, 0.3125000 ],
             [0.4375000, 0.3125000, 0.3125000 ],
             [0.4375000, 0.4375000, 0.3125000 ],
             [0.4375000, 0.4375000, 0.4375000 ]])

        expctd_data.weights = np.array(
                [0.015625, 0.046875, 0.046875, 0.046875, 0.046875, 0.09375,
                 0.09375 , 0.046875, 0.09375 , 0.046875, 0.015625, 0.046875,
                 0.046875, 0.046875, 0.09375 , 0.046875, 0.015625, 0.046875,
                 0.046875, 0.015625])

        expctd_data.freqs = np.array(
            [[0.4186829180, 0.4196037068, 0.7218332435, 2.2194695694,
             2.2428131303, 2.2557227811, 2.3164986495, 2.3317786628,
             2.3509251013, 3.8050069176, 3.8057566770, 3.9911283589,
             4.0008881547, 4.0061389761, 4.0116252535, 4.0198992169,
             4.0324354771, 4.1052645709, 4.1077421719, 4.1141459191,
             4.3457651454, 4.3462661703, 4.3464753773, 6.8938710319],
            [-4.6472729261, -4.6453809491, -4.4894696178, -4.3849587362,
             -4.3828739012, -4.3418389834, -4.3413561562, -4.2540800729,
             -4.1453230721, -4.1446249591, -4.1073467906, -1.3644545560,
             -1.1386486241, -0.6610277325, -0.4707121811, -0.4044854729,
             0.7599935057, 0.8461232241, 1.1929325561, 1.1945621730,
             3.6792828621, 3.6827364731, 3.8729413002, 3.9048277366],
            [-4.6028451256, -4.6008437466, -4.4271513612, -4.4251004609,
             -4.3113187257, -4.3045171821, -4.1792969731, -4.1437377207,
             -4.1327819058, -3.9505097854, -3.8119178312, -2.2062279892,
             -2.0584790480, -1.8388751889, -0.4011914153, -0.3477298231,
             0.6143727628, 0.6847363269, 1.6512277747, 1.6638480151,
             3.2906450186, 3.2975003038, 3.8472248247, 3.8844817774],
            [1.4684695715, 1.5276074564, 1.7667293264, 1.8363906325,
             2.8420234286, 3.0185185277, 3.0290516502, 3.3113353515,
             3.3420335480, 3.4252860002, 3.4259063729, 3.4713365897,
             3.8060606854, 3.8533055444, 3.8750484043, 3.8917394531,
             3.8982520000, 3.9344953648, 4.1798797647, 4.1816218139,
             4.2337360417, 4.2355098714, 5.4360852807, 5.9738826037],
            [-4.6227859711, -4.4678277457, -4.4673297618, -4.3639560604,
             -4.3639080002, -4.2666805289, -4.2175039741, -4.1703967292,
             -4.1521911524, -4.1283559604, -3.9449050655, -1.4715061035,
             -1.2201421784, -1.1683507022, -1.0027577712, -0.8348016761,
             -0.3943556877, 0.8073625856, 1.0997915296, 1.1064605920,
              3.4816087539, 3.6276883549, 3.6453874042, 3.6776607807],
            [-4.5792696700, -4.4261852997, -4.4055912799, -4.3277181380,
             -4.2618846128, -4.1857741811, -4.1375185823, -4.0951886595,
             -3.9453029927, -3.8947985881, -3.7921418106, -2.2105434745,
             -2.0427640850, -1.7936066867, -1.2986959851, -1.0979013059,
             -0.2420000074, 0.9315468080, 1.2411337311, 1.5501593398,
              3.1139271444, 3.2063390943, 3.5053013205, 3.5915469707],
            [1.6467265510, 1.7905824156, 1.9291266602, 2.1067493091,
             2.8586051004, 2.9406818644, 2.9690414211, 3.1504169297,
             3.2917640613, 3.3648492385, 3.4914108069, 3.5727248885,
             3.6333387010, 3.6759598818, 3.8809019928, 3.9018283306,
             3.9458501018, 4.0475175839, 4.1497678528, 4.1851490847,
             4.3231110477, 4.4024739917, 5.5140829462, 6.0241304955],
            [-4.5366212855, -4.3681208324, -4.3679103349, -4.2206608570,
             -4.0856942494, -4.0840230250, -3.9943722817, -3.9084837168,
             -3.7625138932, -3.7273219448, -3.6420008745, -2.3221064026,
             -2.0880920509, -2.0263862241, -1.9995785507, -1.9117404766,
              0.3946249691, 0.7938645986, 1.3401525115, 1.3501491466,
              2.7761916727, 3.0208299695, 3.0512561758, 3.1153913112],
            [1.9594654067, 2.1239131711, 2.2349542074, 2.4478937261,
             2.7883199965, 2.8144873615, 2.9783681244, 3.1470680658,
             3.2098017137, 3.2294018868, 3.3780208534, 3.3866039128,
             3.3901991208, 3.6255382211, 3.9368121252, 3.9825083633,
             4.0074076622, 4.0190708317, 4.0735016961, 4.1398222805,
             4.6268062639, 4.8648776716, 5.5074308746, 5.9625460490],
            [2.2954805899, 2.4339986475, 2.5797347201, 2.5814978609,
             2.7244483942, 2.7263286873, 2.8257046932, 2.9062780417,
             3.1785004689, 3.1920842548, 3.2139581833, 3.2388000983,
             3.5135388977, 3.7971867071, 3.7982406936, 3.9576779005,
             3.9821599605, 4.0295813173, 4.0299584330, 4.0807680517,
             5.0340441249, 5.3484687494, 5.3498780119, 5.7340228149],
            [-4.4524059559, -4.4457671231, -4.4359542806, -4.2640823759,
             -4.2007072197, -4.1952005789, -4.1900857185, -4.1842780083,
             -4.1232830303, -3.9701251517, -3.9683161007, -1.5293583842,
             -1.2216167899, -1.2200299374, -1.1715101352, -1.0321326965,
             -0.9489428191, 0.1812817520, 0.4771198503, 0.7601656464,
              3.3701866223, 3.3999205106, 3.4320740816, 3.4343635621],
            [-4.4098544472, -4.3932384719, -4.2416770168, -4.2252419706,
             -4.1599196267, -4.1355407301, -4.0800286189, -4.0128037079,
             -3.9408957423, -3.8652282951, -3.7815616331, -2.1987252496,
             -2.0131253156, -1.7665646425, -1.3162134431, -1.2149208033,
             -1.0915740168, -0.5613368236, 1.0335505600, 1.0514188039,
              2.9741543239, 3.0095232682, 3.1464479603, 3.3106194510],
            [1.7330019294, 1.9775423949, 1.9997754284, 2.3703218794,
             2.7831291118, 2.8017613500, 3.1438664055, 3.1465559182,
             3.1528728144, 3.5738191764, 3.5811947546, 3.5992298633,
             3.6082536772, 3.6085406506, 3.7524812338, 3.7603571226,
             3.7761398360, 3.8028134487, 4.2030317533, 4.2071009762,
             4.5921311464, 4.6058396729, 5.5811645126, 6.0614566064],
            [-4.3574021221, -4.1854511315, -4.1847905663, -4.0639202293,
             -4.0564287179, -4.0021065808, -3.9516167869, -3.8945095090,
             -3.7839644400, -3.7328996301, -3.6681865165, -2.2704116564,
             -2.0593418208, -2.0022630192, -1.9471806213, -1.8725770153,
             -1.1828272313, -0.2524508981, 0.5931447880, 0.6050251169,
              2.5866747740, 2.6672061321, 2.7798488546, 2.7988076262],
            [1.9900997975, 2.2049808814, 2.2274445968, 2.6253253872,
             2.6770113467, 2.7630424067, 3.0379909920, 3.0525566223,
             3.3074194805, 3.3677752545, 3.3830060983, 3.4334219927,
             3.4496261431, 3.7340187348, 3.7535471601, 3.7707544408,
             3.7917511104, 3.7966090581, 4.1795768010, 4.2690042497,
             4.8561584801, 5.0094008724, 5.5809062167, 6.0059180438],
            [2.3018536791, 2.4663546505, 2.5239727122, 2.5253015188,
             2.7866971654, 2.7885729563, 2.8014866173, 2.8489616459,
             3.1743283621, 3.1863212276, 3.2172927460, 3.2402036159,
             3.7572351643, 3.7638923609, 3.7831209694, 3.7860771633,
             3.7897520510, 4.0262120941, 4.0269909162, 4.2072086485,
             5.1808962024, 5.4467680262, 5.4478159090, 5.7988858311],
            [-4.0313652772, -4.0246998702, -3.9947443960, -3.9318758794,
             -3.8592183976, -3.8514024117, -3.7982565235, -3.7980012357,
             -3.7211817243, -3.7150982924, -3.7046718371, -2.2025548056,
             -2.0621838242, -2.0076596043, -2.0018624307, -1.9891280270,
             -1.9430947978, -1.2316068050, -1.1448470700, -0.9697136454,
              2.0542282680, 2.1897189096, 2.2705610310, 2.3010084205],
            [2.1581099964, 2.3276009943, 2.3521556814, 2.6601429179,
             2.6904540811, 2.7620605717, 2.9792291256, 2.9933787535,
             3.3013360809, 3.3582654763, 3.3600562859, 3.4051845861,
             3.4450017125, 3.4701939286, 3.5178725873, 3.5463549512,
             3.7838654807, 4.0686215934, 4.3882450656, 4.3923508652,
             5.1705174522, 5.1710454101, 5.6079855038, 5.9789963874],
            [2.4018317336, 2.5255682104, 2.5606335594, 2.5622608808,
             2.7510334095, 2.8190606665, 2.8205062538, 2.8299440405,
             3.1659136493, 3.1722702101, 3.2218623686, 3.2416720245,
             3.4294735747, 3.4628680141, 3.4649369367, 3.4670848300,
             4.1043118004, 4.3253346309, 4.3261054143, 4.4582264853,
             5.3550357191, 5.5260731051, 5.5269915904, 5.8170792543],
            [2.6002515616, 2.6017603049, 2.6673598127, 2.6813125310,
             2.6936079713, 2.7959779550, 2.8003290632, 2.8044628879,
             3.1504598371, 3.1541080205, 3.1835456167, 3.1988662846,
             3.2199003333, 3.2328433414, 3.2465072575, 3.2524509486,
             4.3926085719, 4.5308836042, 4.5336680387, 4.5363084010,
             5.5460345320, 5.5499407103, 5.5539088429, 5.7279605824]])*15.633302*ureg('THz')

        expctd_data.freq_down = np.array([])*15.633302*ureg('THz')

        expctd_data.eigenvecs = np.array(
         [[[[-0.12549024623037 + 0.00000000000000j],
            [-0.13362143174900 + 0.00000000000000j],
            [ 0.26054746163391 - 0.00000000000000j]],
           [[-0.12576231246238 + 0.00000000000000j],
            [-0.13388346407714 + 0.00000000000000j],
            [ 0.26052363232662 - 0.00000000000000j]],
           [[-0.12531254727158 + 0.00000000000000j],
            [-0.13330601885697 + 0.00000000000000j],
            [ 0.25872166212199 - 0.00000000000000j]],
           [[-0.12485887327665 + 0.00000000000000j],
            [-0.13278890178472 + 0.00000000000000j],
            [ 0.25866944467883 - 0.00000000000000j]],
           [[-0.15256013540888 + 0.00000000000000j],
            [-0.16163648511182 + 0.00000000000000j],
            [ 0.31433098840035 - 0.00000000000000j]],
           [[-0.15201762428001 + 0.00000000000000j],
            [-0.16109301384031 + 0.00000000000000j],
            [ 0.31434857264174 - 0.00000000000000j]],
           [[-0.15226314484727 - 0.00000000000000j],
            [-0.16270899981692 + 0.00000000000000j],
            [ 0.31684827781512 - 0.00000000000000j]],
           [[-0.15249792512581 + 0.00000000000000j],
            [-0.16299471273614 + 0.00000000000000j],
            [ 0.31686214320225 - 0.00000000000000j]]],
          [[[ 0.22718556130179 + 0.00000000000000],
            [-0.22287722780821 + 0.00000000000000],
            [-0.00477088247386 - 0.00000000000000]],
           [[ 0.22775456318785 - 0.00000000000000],
            [-0.22337784100270 + 0.00000000000000],
            [-0.00476482821554 - 0.00000000000000]],
           [[ 0.22691669808409 - 0.00000000000000],
            [-0.22206513445044 + 0.00000000000000],
            [-0.00456191726837 - 0.00000000000000]],
           [[ 0.22604952858374 - 0.00000000000000],
            [-0.22115428729320 + 0.00000000000000],
            [-0.00455516426670 - 0.00000000000000]],
           [[ 0.27615007186312 - 0.00000000000000],
            [-0.26938892661272 + 0.00000000000000],
            [-0.00566951406174 - 0.00000000000000]],
           [[ 0.27511192895056 - 0.00000000000000],
            [-0.26843597735870 + 0.00000000000000],
            [-0.00566392610561 - 0.00000000000000]],
           [[ 0.27554560467875 - 0.00000000000000],
            [-0.27104413368534 + 0.00000000000000],
            [-0.00567170673229 - 0.00000000000000]],
           [[ 0.27603265814717 - 0.00000000000000],
            [-0.27158311188381 + 0.00000000000000],
            [-0.00566594328481 - 0.00000000000000]]]])

        self.expctd_data = expctd_data

        self.model = 'phonopy'
        self.path = 'test/phonopy_data'
        data = PhononData('mesh.yaml', path=self.path, model=self.model)
        self.data = data

    def test_cell_vec_read_sio2_phonon(self):
        npt.assert_allclose(self.data.cell_vec.to('bohr').magnitude,
                            self.expctd_data.cell_vec.to('bohr').magnitude)

    def test_ion_r_read_sio2_phonon(self):
        npt.assert_array_equal(self.data.ion_r,
                               self.expctd_data.ion_r)

    def test_ion_type_read_sio2_phonon(self):
        npt.assert_array_equal(self.data.ion_type,
                               self.expctd_data.ion_type)

    def test_ion_mass_read_sio2_phonon(self):
        npt.assert_array_equal(self.data.ion_mass.to('amu').magnitude,
                               self.expctd_data.ion_mass.to('amu').magnitude)

    def test_qpts_read_sio2_phonon(self):
        npt.assert_array_equal(self.data.qpts,
                               self.expctd_data.qpts)

    def test_weights_read_sio2_phonon(self):
        npt.assert_array_equal(self.data.weights,
                               self.expctd_data.weights)

    def test_freqs_read_sio2_phonon(self):
        npt.assert_allclose(
            self.data.freqs.to('hartree', 'spectroscopy').magnitude,
            self.expctd_data.freqs.to('hartree', 'spectroscopy').magnitude)

    def test_eigenvecs_read_sio2_phonon(self):
        npt.assert_array_equal(self.data.eigenvecs[0,0:2,:,:,:],
                               self.expctd_data.eigenvecs)

test = TestReadInputFileNaHPhonon()
test.setUp()
